name: note-processor

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test_node:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: CI
      working-directory: ./note-processor
      run: npm ci
    - name: Build
      working-directory: ./note-processor
      run: npm run build
    - name: Test
      working-directory: ./note-processor
      run: npm test
    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: .build
        path: |
          ./note-processor/.build
          !./note-processor/.build/**/*.d.ts
    - name: Archive Dockerfile
      uses: actions/upload-artifact@v2
      with:
        name: dockerfile
        path: |
          ./note-processor/Dockerfile

  build_push_docker:
    runs-on: ubuntu-latest
    needs: build_test_node

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
    - name: Move Dockerfile
      run: mv ./dockerfile/Dockerfile .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_CI_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.DEV_CI_SECRET_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: floto-note-processor
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

 update_lambda:
    runs-on: ubuntu-latest
    needs: build_push_docker

    steps:
    - name: Configure AWS credentials
      id: aws-cred
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_CI_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.DEV_CI_SECRET_KEY }}
        aws-region: eu-west-1

    - name: Update lambda function
      env:
        ACCOUNT_ID: ${{ steps.aws-cred.aws-account-id }}
        IMAGE_TAG: ${{ github.run_number }}
      run: |
       aws lambda update-function-code --function-name \
        arn:aws:lambda:${AWS_DEFAULT_REGION}:${ACCOUNT_ID}:function:floto-note-processor \
        --image-uri ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/floto-note-processor:${IMAGE_TAG}
